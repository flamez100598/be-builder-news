// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: grpc/news/proto/news_svc.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

var File_grpc_news_proto_news_svc_proto protoreflect.FileDescriptor

var file_grpc_news_proto_news_svc_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x6e, 0x65, 0x77, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x6e, 0x65, 0x77, 0x73, 0x5f, 0x73, 0x76, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x02, 0x70, 0x62, 0x1a, 0x24, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x6e, 0x65, 0x77, 0x73, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x73, 0x67, 0x2f, 0x6e, 0x65, 0x77, 0x73, 0x5f, 0x65,
	0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x67, 0x72, 0x70, 0x63,
	0x2f, 0x6e, 0x65, 0x77, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x73, 0x67, 0x2f,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x26,
	0x67, 0x72, 0x70, 0x63, 0x2f, 0x6e, 0x65, 0x77, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x6d, 0x73, 0x67, 0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x5f, 0x6e, 0x65, 0x77, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x6e, 0x65, 0x77,
	0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x73, 0x67, 0x2f, 0x6e, 0x65, 0x77, 0x73,
	0x5f, 0x72, 0x65, 0x73, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x28, 0x67, 0x72, 0x70,
	0x63, 0x2f, 0x6e, 0x65, 0x77, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x73, 0x67,
	0x2f, 0x6e, 0x65, 0x77, 0x73, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x6e, 0x65, 0x77, 0x73,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x73, 0x67, 0x2f, 0x73, 0x6c, 0x75, 0x67, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2b, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x6e, 0x65, 0x77, 0x73,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x73, 0x67, 0x2f, 0x6e, 0x65, 0x77, 0x73, 0x5f,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x72, 0x65, 0x71, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x2b, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x6e, 0x65, 0x77, 0x73, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x73, 0x67, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x5f, 0x6e, 0x65, 0x77, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x33, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x6e, 0x65, 0x77, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x6d, 0x73, 0x67, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x6e, 0x65, 0x77, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x29, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x6e, 0x65, 0x77, 0x73, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x73, 0x67, 0x2f, 0x6e, 0x65, 0x77, 0x73, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x25, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x6e, 0x65, 0x77, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x6d, 0x73, 0x67, 0x2f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x6e, 0x65, 0x77, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x6e, 0x65, 0x77,
	0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x73, 0x67, 0x2f, 0x6e, 0x65, 0x77, 0x73,
	0x5f, 0x74, 0x61, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x67, 0x72, 0x70,
	0x63, 0x2f, 0x6e, 0x65, 0x77, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x73, 0x67,
	0x2f, 0x6e, 0x65, 0x77, 0x73, 0x5f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x25,
	0x67, 0x72, 0x70, 0x63, 0x2f, 0x6e, 0x65, 0x77, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x6d, 0x73, 0x67, 0x2f, 0x6e, 0x65, 0x77, 0x73, 0x5f, 0x69, 0x64, 0x5f, 0x69, 0x6e, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x6e, 0x65, 0x77, 0x73,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x73, 0x67, 0x2f, 0x6e, 0x65, 0x77, 0x73, 0x5f,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x67, 0x72, 0x70,
	0x63, 0x2f, 0x6e, 0x65, 0x77, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x73, 0x67,
	0x2f, 0x74, 0x61, 0x67, 0x5f, 0x6e, 0x65, 0x77, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x22, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x6e, 0x65, 0x77, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x6d, 0x73, 0x67, 0x2f, 0x6e, 0x65, 0x77, 0x73, 0x5f, 0x75, 0x72, 0x6c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x32, 0xcf, 0x0c, 0x0a, 0x0b, 0x4e, 0x65, 0x77, 0x73, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x37, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x4e, 0x65, 0x77,
	0x73, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x2f, 0x0a, 0x0b,
	0x4e, 0x65, 0x77, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x0c, 0x2e, 0x70, 0x62,
	0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x1a, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x30, 0x0a,
	0x0c, 0x45, 0x64, 0x69, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x0c, 0x2e,
	0x70, 0x62, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x1a, 0x10, 0x2e, 0x70, 0x62,
	0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12,
	0x33, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x12, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x4e, 0x65, 0x77, 0x73, 0x49, 0x64, 0x49, 0x6e, 0x74,
	0x1a, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x00, 0x12, 0x35, 0x0a, 0x10, 0x55, 0x6e, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x4e, 0x65,
	0x77, 0x73, 0x49, 0x64, 0x49, 0x6e, 0x74, 0x1a, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x11, 0x52,
	0x65, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73,
	0x12, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x31, 0x0a, 0x0b, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x73, 0x68, 0x4e, 0x65, 0x77, 0x73, 0x12, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x73, 0x68, 0x4e, 0x65, 0x77, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x70,
	0x62, 0x2e, 0x4e, 0x65, 0x77, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x2e, 0x0a, 0x08,
	0x45, 0x64, 0x69, 0x74, 0x4e, 0x65, 0x77, 0x73, 0x12, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x73, 0x68, 0x4e, 0x65, 0x77, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x70,
	0x62, 0x2e, 0x4e, 0x65, 0x77, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x2c, 0x0a, 0x0e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x65, 0x77, 0x73, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x0a,
	0x2e, 0x70, 0x62, 0x2e, 0x4e, 0x65, 0x77, 0x73, 0x49, 0x64, 0x1a, 0x0c, 0x2e, 0x70, 0x62, 0x2e,
	0x4e, 0x65, 0x77, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x64, 0x4e, 0x65, 0x77, 0x73, 0x12, 0x0d, 0x2e,
	0x70, 0x62, 0x2e, 0x4e, 0x65, 0x77, 0x73, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x14, 0x2e, 0x70,
	0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x65, 0x77, 0x73, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x00, 0x12, 0x2d, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x77, 0x73, 0x42,
	0x79, 0x53, 0x6c, 0x75, 0x67, 0x12, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x6c, 0x75, 0x67, 0x1a,
	0x10, 0x2e, 0x70, 0x62, 0x2e, 0x4e, 0x65, 0x77, 0x73, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x00, 0x12, 0x2d, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x77, 0x73, 0x42, 0x79,
	0x49, 0x64, 0x12, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x4e, 0x65, 0x77, 0x73, 0x49, 0x64, 0x1a, 0x10,
	0x2e, 0x70, 0x62, 0x2e, 0x4e, 0x65, 0x77, 0x73, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x3e, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x77, 0x73, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x4e, 0x65, 0x77, 0x73, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x70, 0x62, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x4e, 0x65, 0x77, 0x73, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x41, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x77, 0x73, 0x53, 0x75, 0x62,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x4e, 0x65,
	0x77, 0x73, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e,
	0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x65, 0x77, 0x73, 0x56, 0x69, 0x65, 0x77, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x0f, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x4e, 0x65, 0x77, 0x73, 0x12, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4e, 0x65, 0x77, 0x73, 0x52, 0x65, 0x71,
	0x1a, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x65, 0x77, 0x73, 0x56, 0x69,
	0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x14, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4e, 0x65, 0x77, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x4e, 0x65, 0x77, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x4e, 0x65,
	0x77, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x4f, 0x0a,
	0x16, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x6c, 0x61,
	0x74, 0x65, 0x64, 0x4e, 0x65, 0x77, 0x73, 0x12, 0x1d, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x4e,
	0x65, 0x77, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x4e, 0x65, 0x77, 0x73, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x51,
	0x0a, 0x1b, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x65, 0x64, 0x4e, 0x65, 0x77, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x2e,
	0x70, 0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x65, 0x64, 0x4e, 0x65, 0x77, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x70,
	0x62, 0x2e, 0x4e, 0x65, 0x77, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x00, 0x12, 0x37, 0x0a, 0x0a, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4e, 0x65, 0x77, 0x73, 0x12,
	0x11, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4e, 0x65, 0x77, 0x73, 0x52,
	0x65, 0x71, 0x1a, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x65, 0x77, 0x73,
	0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x0f, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x4e, 0x65, 0x77, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x11, 0x2e,
	0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4e, 0x65, 0x77, 0x73, 0x52, 0x65, 0x71,
	0x1a, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x4e, 0x65, 0x77, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x36, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x77, 0x73,
	0x42, 0x79, 0x54, 0x61, 0x67, 0x12, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x4e, 0x65, 0x77, 0x73, 0x54,
	0x61, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4e,
	0x65, 0x77, 0x73, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x38, 0x0a,
	0x11, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x77, 0x73, 0x42, 0x79, 0x54, 0x61, 0x67, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x4e, 0x65, 0x77, 0x73, 0x54, 0x61, 0x67, 0x52,
	0x65, 0x71, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x4e, 0x65, 0x77, 0x73, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x65, 0x64, 0x4e, 0x65, 0x77, 0x73, 0x12, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x4e,
	0x65, 0x77, 0x73, 0x49, 0x64, 0x1a, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4e,
	0x65, 0x77, 0x73, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x2d, 0x0a,
	0x0b, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x77, 0x73, 0x54, 0x61, 0x67, 0x73, 0x12, 0x0a, 0x2e, 0x70,
	0x62, 0x2e, 0x4e, 0x65, 0x77, 0x73, 0x49, 0x64, 0x1a, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x4e, 0x65,
	0x77, 0x73, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x30, 0x0a, 0x0b,
	0x47, 0x65, 0x74, 0x54, 0x61, 0x67, 0x73, 0x4e, 0x65, 0x77, 0x73, 0x12, 0x0e, 0x2e, 0x70, 0x62,
	0x2e, 0x4e, 0x65, 0x77, 0x73, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x70, 0x62,
	0x2e, 0x54, 0x61, 0x67, 0x4e, 0x65, 0x77, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x37,
	0x0a, 0x10, 0x47, 0x65, 0x74, 0x54, 0x61, 0x67, 0x73, 0x4e, 0x65, 0x77, 0x73, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x4e, 0x65, 0x77, 0x73, 0x54, 0x61, 0x67, 0x52,
	0x65, 0x71, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x4e, 0x65, 0x77, 0x73, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x0f, 0x52, 0x65, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x64, 0x12, 0x0e, 0x2e, 0x70, 0x62, 0x2e,
	0x4e, 0x65, 0x77, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x1a, 0x12, 0x2e, 0x70, 0x62, 0x2e,
	0x4e, 0x65, 0x77, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00,
	0x12, 0x33, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4e, 0x65, 0x77, 0x73, 0x55, 0x72,
	0x6c, 0x73, 0x12, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x4e, 0x65, 0x77, 0x73, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x4e, 0x65, 0x77, 0x73, 0x55, 0x72, 0x6c, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x00, 0x42, 0x0e, 0x5a, 0x0c, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x6e, 0x65,
	0x77, 0x73, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var file_grpc_news_proto_news_svc_proto_goTypes = []interface{}{
	(*NewsEmpty)(nil),                 // 0: pb.NewsEmpty
	(*Category)(nil),                  // 1: pb.Category
	(*NewsIdInt)(nil),                 // 2: pb.NewsIdInt
	(*CategoriesReq)(nil),             // 3: pb.CategoriesReq
	(*PublishNewsReq)(nil),            // 4: pb.PublishNewsReq
	(*NewsId)(nil),                    // 5: pb.NewsId
	(*Slug)(nil),                      // 6: pb.Slug
	(*NewsCategoryReq)(nil),           // 7: pb.NewsCategoryReq
	(*AdminSearchNewsReq)(nil),        // 8: pb.AdminSearchNewsReq
	(*AdminSearchRelatedNewsReq)(nil), // 9: pb.AdminSearchRelatedNewsReq
	(*SearchNewsReq)(nil),             // 10: pb.SearchNewsReq
	(*NewsTagReq)(nil),                // 11: pb.NewsTagReq
	(*NewsOrders)(nil),                // 12: pb.NewsOrders
	(*CategoriesResp)(nil),            // 13: pb.CategoriesResp
	(*CategoryResp)(nil),              // 14: pb.CategoryResp
	(*NewsResp)(nil),                  // 15: pb.NewsResp
	(*ListNewsViewResp)(nil),          // 16: pb.ListNewsViewResp
	(*NewsViewResp)(nil),              // 17: pb.NewsViewResp
	(*NewsCountResp)(nil),             // 18: pb.NewsCountResp
	(*NewsTagsResp)(nil),              // 19: pb.NewsTagsResp
	(*TagNewsResp)(nil),               // 20: pb.TagNewsResp
	(*NewsOrdersResp)(nil),            // 21: pb.NewsOrdersResp
	(*NewsUrlsResp)(nil),              // 22: pb.NewsUrlsResp
}
var file_grpc_news_proto_news_svc_proto_depIdxs = []int32{
	0,  // 0: pb.NewsService.GetAllCategories:input_type -> pb.NewsEmpty
	1,  // 1: pb.NewsService.NewCategory:input_type -> pb.Category
	1,  // 2: pb.NewsService.EditCategory:input_type -> pb.Category
	2,  // 3: pb.NewsService.DeleteCategory:input_type -> pb.NewsIdInt
	2,  // 4: pb.NewsService.UndeleteCategory:input_type -> pb.NewsIdInt
	3,  // 5: pb.NewsService.ReorderCategories:input_type -> pb.CategoriesReq
	4,  // 6: pb.NewsService.PublishNews:input_type -> pb.PublishNewsReq
	4,  // 7: pb.NewsService.EditNews:input_type -> pb.PublishNewsReq
	5,  // 8: pb.NewsService.DeleteNewsPost:input_type -> pb.NewsId
	0,  // 9: pb.NewsService.GetFeaturedNews:input_type -> pb.NewsEmpty
	6,  // 10: pb.NewsService.GetNewsBySlug:input_type -> pb.Slug
	5,  // 11: pb.NewsService.GetNewsById:input_type -> pb.NewsId
	7,  // 12: pb.NewsService.GetNewsCategory:input_type -> pb.NewsCategoryReq
	7,  // 13: pb.NewsService.GetNewsSubCategory:input_type -> pb.NewsCategoryReq
	8,  // 14: pb.NewsService.AdminSearchNews:input_type -> pb.AdminSearchNewsReq
	8,  // 15: pb.NewsService.AdminSearchNewsCount:input_type -> pb.AdminSearchNewsReq
	9,  // 16: pb.NewsService.AdminSearchRelatedNews:input_type -> pb.AdminSearchRelatedNewsReq
	9,  // 17: pb.NewsService.AdminSearchRelatedNewsCount:input_type -> pb.AdminSearchRelatedNewsReq
	10, // 18: pb.NewsService.SearchNews:input_type -> pb.SearchNewsReq
	10, // 19: pb.NewsService.SearchNewsCount:input_type -> pb.SearchNewsReq
	11, // 20: pb.NewsService.GetNewsByTag:input_type -> pb.NewsTagReq
	11, // 21: pb.NewsService.GetNewsByTagCount:input_type -> pb.NewsTagReq
	5,  // 22: pb.NewsService.GetRelatedNews:input_type -> pb.NewsId
	5,  // 23: pb.NewsService.GetNewsTags:input_type -> pb.NewsId
	11, // 24: pb.NewsService.GetTagsNews:input_type -> pb.NewsTagReq
	11, // 25: pb.NewsService.GetTagsNewsCount:input_type -> pb.NewsTagReq
	12, // 26: pb.NewsService.ReorderFeatured:input_type -> pb.NewsOrders
	0,  // 27: pb.NewsService.GetAllNewsUrls:input_type -> pb.NewsEmpty
	13, // 28: pb.NewsService.GetAllCategories:output_type -> pb.CategoriesResp
	14, // 29: pb.NewsService.NewCategory:output_type -> pb.CategoryResp
	14, // 30: pb.NewsService.EditCategory:output_type -> pb.CategoryResp
	14, // 31: pb.NewsService.DeleteCategory:output_type -> pb.CategoryResp
	14, // 32: pb.NewsService.UndeleteCategory:output_type -> pb.CategoryResp
	13, // 33: pb.NewsService.ReorderCategories:output_type -> pb.CategoriesResp
	15, // 34: pb.NewsService.PublishNews:output_type -> pb.NewsResp
	15, // 35: pb.NewsService.EditNews:output_type -> pb.NewsResp
	15, // 36: pb.NewsService.DeleteNewsPost:output_type -> pb.NewsResp
	16, // 37: pb.NewsService.GetFeaturedNews:output_type -> pb.ListNewsViewResp
	17, // 38: pb.NewsService.GetNewsBySlug:output_type -> pb.NewsViewResp
	17, // 39: pb.NewsService.GetNewsById:output_type -> pb.NewsViewResp
	16, // 40: pb.NewsService.GetNewsCategory:output_type -> pb.ListNewsViewResp
	16, // 41: pb.NewsService.GetNewsSubCategory:output_type -> pb.ListNewsViewResp
	16, // 42: pb.NewsService.AdminSearchNews:output_type -> pb.ListNewsViewResp
	18, // 43: pb.NewsService.AdminSearchNewsCount:output_type -> pb.NewsCountResp
	16, // 44: pb.NewsService.AdminSearchRelatedNews:output_type -> pb.ListNewsViewResp
	18, // 45: pb.NewsService.AdminSearchRelatedNewsCount:output_type -> pb.NewsCountResp
	16, // 46: pb.NewsService.SearchNews:output_type -> pb.ListNewsViewResp
	18, // 47: pb.NewsService.SearchNewsCount:output_type -> pb.NewsCountResp
	16, // 48: pb.NewsService.GetNewsByTag:output_type -> pb.ListNewsViewResp
	18, // 49: pb.NewsService.GetNewsByTagCount:output_type -> pb.NewsCountResp
	16, // 50: pb.NewsService.GetRelatedNews:output_type -> pb.ListNewsViewResp
	19, // 51: pb.NewsService.GetNewsTags:output_type -> pb.NewsTagsResp
	20, // 52: pb.NewsService.GetTagsNews:output_type -> pb.TagNewsResp
	18, // 53: pb.NewsService.GetTagsNewsCount:output_type -> pb.NewsCountResp
	21, // 54: pb.NewsService.ReorderFeatured:output_type -> pb.NewsOrdersResp
	22, // 55: pb.NewsService.GetAllNewsUrls:output_type -> pb.NewsUrlsResp
	28, // [28:56] is the sub-list for method output_type
	0,  // [0:28] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_grpc_news_proto_news_svc_proto_init() }
func file_grpc_news_proto_news_svc_proto_init() {
	if File_grpc_news_proto_news_svc_proto != nil {
		return
	}
	file_grpc_news_proto_msg_news_empty_proto_init()
	file_grpc_news_proto_msg_category_proto_init()
	file_grpc_news_proto_msg_publish_news_proto_init()
	file_grpc_news_proto_msg_news_resp_proto_init()
	file_grpc_news_proto_msg_news_view_resp_proto_init()
	file_grpc_news_proto_msg_slug_proto_init()
	file_grpc_news_proto_msg_news_category_req_proto_init()
	file_grpc_news_proto_msg_admin_search_news_proto_init()
	file_grpc_news_proto_msg_admin_search_related_news_proto_init()
	file_grpc_news_proto_msg_news_count_resp_proto_init()
	file_grpc_news_proto_msg_search_news_proto_init()
	file_grpc_news_proto_msg_news_tags_proto_init()
	file_grpc_news_proto_msg_news_id_proto_init()
	file_grpc_news_proto_msg_news_id_int_proto_init()
	file_grpc_news_proto_msg_news_order_proto_init()
	file_grpc_news_proto_msg_tag_news_proto_init()
	file_grpc_news_proto_msg_news_url_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_grpc_news_proto_news_svc_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_grpc_news_proto_news_svc_proto_goTypes,
		DependencyIndexes: file_grpc_news_proto_news_svc_proto_depIdxs,
	}.Build()
	File_grpc_news_proto_news_svc_proto = out.File
	file_grpc_news_proto_news_svc_proto_rawDesc = nil
	file_grpc_news_proto_news_svc_proto_goTypes = nil
	file_grpc_news_proto_news_svc_proto_depIdxs = nil
}
